% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_access.R
\name{fetchFromAccess}
\alias{fetchFromAccess}
\title{Fetch data from Access database}
\usage{
fetchFromAccess(
  db_path,
  data_prefix = "qExport",
  data_regex = paste0("(^", data_prefix, ".*)", collapse = "|"),
  lookup_prefix = "tlu",
  lookup_regex = paste0("(^", lookup_prefix, ".*)", collapse = "|"),
  as.is = FALSE,
  add_r_classes = FALSE,
  custom_wrangler,
  save_to_files = FALSE,
  ...
)
}
\arguments{
\item{db_path}{Path to your Access database}

\item{data_prefix}{Character vector of prefix(es) used in your Access database to indicate data export tables and/or queries.Be sure to include special characters like underscores (e.g. 'tbl_'). If you are using the \code{data_regex} argument, be sure to include prefixes for all matched tables.}

\item{data_regex}{Regular expression to match names of data tables. You can ignore this if your data table prefix(es) are specific to the tables you want to read in. If you only want to read in a subset of the tables specified by \code{data_prefix}, use this argument to specify only the tables you want. \code{data_prefix} is still required, as it is used to clean up table names.}

\item{lookup_prefix}{Character vector of prefix(es) used in your Access database to indicate lookup tables. Be sure to include special characters like underscores (e.g. 'tlu_'). If you are using the \code{lookup_regex} argument, be sure to include prefixes for all matched tables.}

\item{lookup_regex}{Regular expression to match names of lookup tables. You can ignore this if your lookup table prefix(es) are specific to the lookups you want to read in. If you only want to read in a subset of the lookup tables specified by \code{lookup_prefix}, use this argument to specify only the tables you want. This argument is especially useful if you have one or two tables labeled as 'data' tables (e.g. tbl_Sites) that act as lookups in some cases. \code{lookup_prefix} is still required, as it is used to clean up lookup names.}

\item{as.is}{which (if any) columns returned as character should be
    converted to another type?  Allowed values are as for
    \code{\link{read.table}}.  See \sQuote{Details}.}

\item{add_r_classes}{Include R classes in addition to EML classes?}

\item{custom_wrangler}{Optional - function that takes arguments \code{data}, \code{lookups}, and \code{metadata}. \code{data} and \code{lookups} are lists whose names and content correspond to the data and lookup tables in the database. Names do not include prefixes. \code{metadata} contains a tibble of field-level metadata called \code{MetadataAttributes}. See qsys_MetadataAttributes in the Access database for the contents of this tibble. This function should perform any necessary data wrangling specific to your dataset and return a named list containing \code{data}, \code{lookups}, and \code{metadata} with contents modified as needed. Do not remove or add tibbles in \code{data} or \code{lookups} and do not modify their names. If you add, remove, or rename columns in a tibble in \code{data}, you must modify the contents of \code{metadata} accordingly. Do not modify the structure or column names of \code{metadata}. The structure and column names of \code{lookups} should also be left as-is. Typically the only necessary modification to \code{lookups} will be to filter overly large species lists to only include taxa that appear in the data.}

\item{save_to_files}{Save data and data dictionaries to files on hard drive?}

\item{...}{Options to pass to \code{\link[=writeToFiles]{writeToFiles()}}}
}
\value{
A nested list containing three lists of tibbles: data, lookups, and metadata.
}
\description{
This function assumes that you are using the Access Metadata Generator in your Access database.
}
\details{
See \code{\link[RODBC:sqlFetch]{RODBC::sqlFetch()}} and \code{\link[RODBC:sqlQuery]{RODBC::sqlQuery()}} for more information on the \code{as.is} argument.
}
